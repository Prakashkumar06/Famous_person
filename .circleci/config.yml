version: 2.1

executors:
  docker-executor:
    docker:
      - image: google/cloud-sdk:latest
    working_directory: ~/repo

jobs:
  checkout_code:
    executor: docker-executor
    steps:
      - checkout

  build_docker_image:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Authenticate with google cloud
          command: |
              echo "$GCLOUD_SERVICE_KEY" | base64 --decode > gcp-key.json
              gcloud auth activate-service-account --key-file=gcp-key.json
              gcloud auth configure-docker us-central1-docker.pkg.dev || gcloud auth configure-docker

      - run:
          name: Build and Push Image
          command: |
              docker build -t us-central1-docker.pkg.dev/$GOOGLE_PROJECT_ID/llmops-repo/llmops-app:latest .
              docker push us-central1-docker.pkg.dev/$GOOGLE_PROJECT_ID/llmops-repo/llmops-app:latest

  deploy_to_gke:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Authenticate with google cloud
          command: |
              echo "$GCLOUD_SERVICE_KEY" | base64 --decode > gcp-key.json
              gcloud auth activate-service-account --key-file=gcp-key.json
              gcloud auth configure-docker us-central1-docker.pkg.dev || gcloud auth configure-docker
      
      - run:
          name: Configure GKE
          command: |
              gcloud container clusters get-credentials $GKE_CLUSTER --region $GOOGLE_COMPUTE_REGION --project $GOOGLE_PROJECT_ID
      - run:
          name: Deploy to GKE
          command: |
              kubectl apply -f kubernetes-deployment.yaml --validate=false
              kubectl rollout restart deployment llmops-app

  run_playwright_tests:
    executor: docker-executor
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            npm install
      - run:
          name: Run Playwright tests
          command: |
            mkdir test-results
            pnpm run serve &
            TESTFILES=$(circleci tests glob "specs/e2e/**/*.spec.ts")
            echo "$TESTFILES" | circleci tests run --command="xargs pnpm playwright test --config=playwright.config.ci.ts --reporter=junit" --verbose --split-by=timings
      - store_test_results:
          path: test-results

workflows:
  version: 2
  deploy_pipeline:
    jobs:
      - checkout_code
      - build_docker_image:
          requires:
            - checkout_code
      - deploy_to_gke:
          requires:
            - build_docker_image
      - run_playwright_tests:
          requires:
            - deploy_to_gke
